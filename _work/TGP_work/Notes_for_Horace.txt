Things to check/confirm
=======================
The detector group index must always be returned as 1,2,3,...ndet by the rundata loader

c routines must follow matlab pattern that zeros can be added or multiplied to always give exactly zero 
e.g. a * 0 = 0 with no rounding errors at all.


Optimisations
=============
Use detdcn in calc_projetions_c

Surely the bin_pixel_c sort routine can be made faster? (use a bucket sort)

The creation of sparse tmp files can be optimised in Matlab and c code over the current algorithms
(currently create sqw object and then convert to sparse; wasteful creation of pix array for example)

Rearrange order of contents in sparse sqw object tp put pix field at the end.


Little things
=============
***DONE *** 
horace_version is called in get_sqw_type_from_file, get_sqw, put_sqw, and it calls check of mex files.
This is a waste; only do it if the return arguments require it.

fake_sqw: will be able to speed this up if fill signal with zeros rather than psi (have this as an option)
once sparse combination has been implemented.


Thoughts, comments, miscellania
===============================
Russell's combine_sqw: assumes that the headers are identical, and I think it also has very slightly
altered bin boundaries on projection axes to force a call to @sqw/cut

Alex has created @sqw/rundata. Where is this used? Seems like a very useful routine, but needs
to be made more robust (e.g. assumes a single spe data set contributed to an sqw object)

tilde for unused output arguments was only infroduced in R2009b. We should not use it.